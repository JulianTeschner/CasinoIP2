name: Run Tests

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main ]

env:
  APP_MONGO_USER: root
  APP_MONGO_PASSWORD: root
  APP_MONGO_DB: test
  APP_MONGO_HOST: 127.0.0.1
  APP_MONGO_PORT: 27017

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.17.x]
      #  os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./backend
    services:
      mongodb:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: ${ APP_MONGO_USER }
          MONGO_INITDB_ROOT_PASSWORD: ${ APP_MONGO_PASSWORD }
          MONGO_INITDB_ROOT_DB: ${ APP_MONGO_DB }
          MONGO_INITDB_ROOT_HOST: ${ APP_MONGO_HOST }
          MONGO_INITDB_ROOT_PORT: ${ APP_MONGO_PORT }
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017            
    
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/checkout@v3
    
#    - name: Setup Mongo DB in Docker
#      run: docker-compose up -d
#      working-directory: ./database
      
    - name: Run Tests
      shell: bash
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI  }}
        AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
        AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      run: |
        printenv
        sudo go test ./... -coverprofile coverage.out -covermode count
        sudo go tool cover -func coverage.out
        
    - name: Quality Gate - Test coverage shall be above threshold
      env:
          TESTCOVERAGE_THRESHOLD: 75
      run: |
            echo "Quality Gate: checking test coverage is above threshold ..."
            echo "Threshold             : $TESTCOVERAGE_THRESHOLD %"
            totalCoverage=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
            echo "Current test coverage : $totalCoverage %"
            if (( $(echo "$totalCoverage $TESTCOVERAGE_THRESHOLD" | awk '{print ($1 > $2)}') )); then
                echo "OK"
            else
                echo "Current test coverage is below threshold. Please add more unit tests or adjust threshold to a lower value."
                echo "Failed"
                exit 1
            fi
